/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DAO;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;
import model.Bill;
import model.Room;
import model.TypeRoom;
import model.Zone;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author VanTinh
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    //String check;
    DefaultTableModel model;
    public NewJFrame() {
        initComponents();
//        DefaultCategoryDataset df=new DefaultCategoryDataset();
//        df.addValue(10, "Sr1", "Laptop");
//        df.addValue(20, "Sr2", "PC");
//        df.addValue(5, "Sr3", "Phone");
//        JFreeChart c=ChartFactory.createBarChart3D("Char ", "CC GI V", "CL GI V", df,PlotOrientation.VERTICAL,true,true,true);
//        ChartFrame frame=new ChartFrame("Exemple Chart",c);
//        panel.add(frame,BorderLayout.CENTER);
//        panel.validate();
        //frame.pack();
       // frame.setVisible(true);
        
       // JFreeChart chart=ChartFactory.createAreaChart(title, categoryAxisLabel, valueAxisLabel, dataset)
//        DefaultTableModel df=new DefaultTableModel();
//        df=(DefaultTableModel) jTable1.getModel();
//        jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
//        DefaultTableCellRenderer r=new DefaultTableCellRenderer();
//        r.setHorizontalAlignment(JLabel.LEFT);
//        jTable1.getColumnModel().getColumn(0).setCellRenderer(r);
//        JTableHeader t=jTable1.getTableHeader();
//        t.setFont(new Font("Segoe UI",Font.BOLD,12));
//showChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        abstractOverlay1 = new org.jfree.chart.panel.AbstractOverlay();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        jMenuItem1.setText("Giải quyết");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Gia hạn");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Reset");
        jPopupMenu2.add(jMenuItem3);

        jMenuItem4.setText("Clear");
        jPopupMenu2.add(jMenuItem4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1040, 480));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jButton1.setText("Show 1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        panel.setBackground(new java.awt.Color(0, 204, 204));
        panel.setLayout(new javax.swing.BoxLayout(panel, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setText("Show 2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Show 3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("ShowType");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Show Student");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Show TKDT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1183, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton6)))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jDateChooser1.setDateFormatString("MM/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        // TODO add your handling code here:
       // new DangNhapNope().setVisible(true);
    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         new DangNhapNope().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new Manager().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseExited

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        jPopupMenu1.show(this,evt.getX(),evt.getY());
    }//GEN-LAST:event_formMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       // showChart(); 
       show3DChart();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        showChart();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        showLineChart();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        showLoaiPhong_Khu("Khu B");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        showAmountStudent_Type();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        showTKDoanhThu_CaNam(2021);
    }//GEN-LAST:event_jButton6ActionPerformed
int tienToInt(String tien){
    String arr[]=tien.split("\\.");
    int a=0;
    String result="";
    for(int i=0;i<arr.length;i++){
        result+=arr[i];
    }
    a=Integer.valueOf(result);
    return a;
}
void showChart(){
    DefaultPieDataset bar=new DefaultPieDataset();
    bar.setValue("Iphone", 60);
    bar.setValue("Samsung", 20);
    bar.setValue("Xiaomi",20);
    bar.setValue("Oppo", 30);
    bar.setValue("Nokia", 10);
    JFreeChart pieChart=ChartFactory.createPieChart("Thống kê doanh thu sản phẩm", bar,false,true,false);
    PiePlot pie=(PiePlot)pieChart.getPlot();
    pie.setSectionPaint("Iphone", new Color(255,255,102));
    pie.setSectionPaint("Samsung", new Color(102,155,102));
    pie.setSectionPaint("Xiaomi", new Color(255,102,153));
    pie.setSectionPaint("Oppo", new Color(204,0,204));
    pie.setSectionPaint("Nokia", new Color(255,255,153));
    pie.setBackgroundPaint(Color.white);
    ChartPanel barChanel=new ChartPanel(pieChart);
    panel.removeAll();
    panel.add(barChanel,BorderLayout.CENTER);
    panel.validate();
}
void show3DChart(){
    ArrayList<Zone> list=new DAO().getListZone();
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    for(Zone x:list){
        int amount=new DAO().amountOfNow_Zone(x.getNameZone());
        df.addValue(amount, "",x.getNameZone());
    }
        JFreeChart chart=ChartFactory.createBarChart3D("Thống kê sinh viên theo khu", "Tên khu", "Số lượng", df,PlotOrientation.VERTICAL,true,true,true);
        CategoryPlot plot=chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLACK);
        
        ChartPanel chartPanel=new ChartPanel(chart);
        panel.removeAll();
        panel.add(chartPanel);
        panel.validate();
}

void showLoaiPhong_Khu(String nameZone){
    ArrayList <TypeRoom> list=new DAO().getListTypeRoom();
    DefaultPieDataset bar=new DefaultPieDataset();
    for(TypeRoom t:list){
        int count=new DAO().count_TypeRoomInZone(nameZone, t.getID());
        bar.setValue(t.getTypeOfRoom(), count);
    }
    JFreeChart pieChart=ChartFactory.createPieChart("Thống kê loại phòng trong từng khu", bar,false,true,false);
    ChartPanel barChanel=new ChartPanel(pieChart);
    panel.removeAll();
    panel.add(barChanel,BorderLayout.CENTER);
    panel.validate();
}
void showAmountStudent_Type(){
    ArrayList<TypeRoom> list=new DAO().getListTypeRoom();
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    for(TypeRoom r:list){
        int amount=new DAO().amountStudent_Type(r.getID());
        df.addValue(amount, r.getTypeOfRoom(),r.getTypeOfRoom());
    }
        JFreeChart chart=ChartFactory.createBarChart3D("Thống kê sinh viên theo loại phòng", "Loại dịch vụ", "Số lượng", df,PlotOrientation.VERTICAL,true,true,true);
        CategoryPlot plot=chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLACK);
        
        ChartPanel chartPanel=new ChartPanel(chart);
        panel.removeAll();
        panel.add(chartPanel);
        panel.validate();
}
void showLineChart(){
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    df.setValue(200, "Amount", "IPhone");
    df.setValue(150, "Amount", "Xiaomi");
    df.setValue(18, "Amount", "Samsung");
    df.setValue(100, "Amount", "Nokia");
    df.setValue(80, "Amount", "Oppo");
    df.setValue(250, "Amount", "Biphone");
    JFreeChart lineChart=ChartFactory.createLineChart("Doanh thu","Sản phẩm","Số lượng",df, PlotOrientation.VERTICAL,false,true,false);
    CategoryPlot lineCate=lineChart.getCategoryPlot();
    lineCate.setBackgroundPaint(Color.white);
    LineAndShapeRenderer line=(LineAndShapeRenderer)lineCate.getRenderer();
    Color lineChartColor=new Color(204,0,51);
    line.setSeriesPaint(0, lineChartColor);
    ChartPanel charPanel=new ChartPanel(lineChart);
    panel.removeAll();
    panel.add(charPanel,BorderLayout.CENTER);
    panel.validate();
}
void showTKDoanhThu_HK1(int year){
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    ArrayList <Bill> listBill=new DAO().getListBillAll();
    int cost1=0,cost2=0,cost3=0,cost4=0,cost5=0;
        for(Bill x : listBill){
            Date d=new DAO().getDateCreate_Bill(x.getIDBill());
            if(year(d)==year){
            if(month(d)>=8&&month(d)<=12){
                if(month(d)==8){
                    cost1+=x.getPayment();
                }else if(month(d)==9){
                    cost2+=x.getPayment();
                }else if(month(d)==10){
                    cost3+=x.getPayment();
                }else if(month(d)==11){
                    cost4+=x.getPayment();
                }else if(month(d)==12){
                    cost5+=x.getPayment();
                }
            }
        }
        }
        if(cost1==0) JOptionPane.showMessageDialog(rootPane, "Không tồn tại hóa đơn trong thời gian này");
        else{
        df.setValue(cost1, "Amount", "Tháng 8");
        df.setValue(cost2, "Amount", "Tháng 9");
        df.setValue(cost3, "Amount", "Tháng 10");
        df.setValue(cost4, "Amount", "Tháng 11");
        df.setValue(cost5, "Amount", "Tháng 12");
        
        JFreeChart lineChart=ChartFactory.createLineChart("Thống Kê Doanh Thu KTX","Tháng","Tổng Tiền",df, PlotOrientation.VERTICAL,false,true,false);
    CategoryPlot lineCate=lineChart.getCategoryPlot();
    lineCate.setBackgroundPaint(Color.white);
    LineAndShapeRenderer line=(LineAndShapeRenderer)lineCate.getRenderer();
    Color lineChartColor=new Color(204,0,51);
    line.setSeriesPaint(0, lineChartColor);
    ChartPanel charPanel=new ChartPanel(lineChart);
    panel.removeAll();
    panel.add(charPanel,BorderLayout.CENTER);
    panel.validate();
        }
}
void showTKDoanhThu_HK2(int year){
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    ArrayList <Bill> listBill=new DAO().getListBillAll();
    int cost1=0,cost2=0,cost3=0,cost4=0,cost5=0;
        for(Bill x : listBill){
            Date d=new DAO().getDateCreate_Bill(x.getIDBill());
            if(year(d)==year){
            if(month(d)>=8&&month(d)<=12){
                if(month(d)==1){
                    cost1+=x.getPayment();
                }else if(month(d)==2){
                    cost2+=x.getPayment();
                }else if(month(d)==3){
                    cost3+=x.getPayment();
                }else if(month(d)==4){
                    cost4+=x.getPayment();
                }else if(month(d)==5){
                    cost5+=x.getPayment();
                }
            }
        }
        }
        if(cost1==0) JOptionPane.showMessageDialog(rootPane, "Không tồn tại hóa đơn trong thời gian này");
        else{
        df.setValue(cost1, "Amount", "Tháng 1");
        df.setValue(cost2, "Amount", "Tháng 2");
        df.setValue(cost3, "Amount", "Tháng 3");
        df.setValue(cost4, "Amount", "Tháng 4");
        df.setValue(cost5, "Amount", "Tháng 5");
        JFreeChart lineChart=ChartFactory.createLineChart("Thống Kê Doanh Thu KTX","Tháng","Tổng Tiền",df, PlotOrientation.VERTICAL,false,true,false);
    CategoryPlot lineCate=lineChart.getCategoryPlot();
    lineCate.setBackgroundPaint(Color.white);
    LineAndShapeRenderer line=(LineAndShapeRenderer)lineCate.getRenderer();
    Color lineChartColor=new Color(204,0,51);
    line.setSeriesPaint(0, lineChartColor);
    ChartPanel charPanel=new ChartPanel(lineChart);
    panel.removeAll();
    panel.add(charPanel,BorderLayout.CENTER);
    panel.validate();
        }
}
void showTKDoanhThu_HK3(int year){
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    ArrayList <Bill> listBill=new DAO().getListBillAll();
    int cost1=0,cost2=0,cost3=0,cost4=0,cost5=0;
        for(Bill x : listBill){
            Date d=new DAO().getDateCreate_Bill(x.getIDBill());
            if(year(d)==year){
            if(month(d)>=8&&month(d)<=12){
                if(month(d)==6){
                    cost1+=x.getPayment();
                }else if(month(d)==7){
                    cost2+=x.getPayment();
                }
            }
        }
        }
        if(cost1==0) JOptionPane.showMessageDialog(rootPane, "Không tồn tại hóa đơn trong thời gian này");
        else{
        df.setValue(cost1, "Amount", "Tháng 6");
        df.setValue(cost2, "Amount", "Tháng 7");
        JFreeChart lineChart=ChartFactory.createLineChart("Thống Kê Doanh Thu KTX","Tháng","Tổng Tiền",df, PlotOrientation.VERTICAL,false,true,false);
    CategoryPlot lineCate=lineChart.getCategoryPlot();
    lineCate.setBackgroundPaint(Color.white);
    LineAndShapeRenderer line=(LineAndShapeRenderer)lineCate.getRenderer();
    Color lineChartColor=new Color(204,0,51);
    line.setSeriesPaint(0, lineChartColor);
    ChartPanel charPanel=new ChartPanel(lineChart);
    panel.removeAll();
    panel.add(charPanel,BorderLayout.CENTER);
    panel.validate();
        }
}
void showTKDoanhThu_CaNam(int year){
    DefaultCategoryDataset df=new DefaultCategoryDataset();
    ArrayList <Bill> listBill=new DAO().getListBillAll();
    int cost1=0,cost2=0,cost3=0,cost4=0,cost5=0,cost6=0,cost7=0,cost8=0,cost9=0,cost10=0,cost11=0,cost12=0;
        for(Bill x : listBill){
            Date d=new DAO().getDateCreate_Bill(x.getIDBill());
            if(year(d)==year){
            if(month(d)>=8&&month(d)<=12){
                if(month(d)==1){
                    cost1+=x.getPayment();
                }else if(month(d)==2){
                    cost2+=x.getPayment();
                }else if(month(d)==3){
                    cost3+=x.getPayment();
                }else if(month(d)==4){
                    cost4+=x.getPayment();
                }else if(month(d)==5){
                    cost5+=x.getPayment();
                }else if(month(d)==6){
                    cost6+=x.getPayment();
                }else if(month(d)==7){
                    cost7+=x.getPayment();
                }else if(month(d)==8){
                    cost8+=x.getPayment();
                }else if(month(d)==9){
                    cost9+=x.getPayment();
                }else if(month(d)==10){
                    cost10+=x.getPayment();
                }else if(month(d)==11){
                    cost11+=x.getPayment();
                }else if(month(d)==12){
                    cost12+=x.getPayment();
                }
            }
        }
        }
        if(cost1==0&&cost2==0&&cost3==0&&cost4==0&&cost5==0&&cost6==0&&cost7==0&&cost8==0&&cost9==0&&cost10==0&&
                cost11==0&&cost12==0){
            JOptionPane.showMessageDialog(rootPane, "Không tồn tại hóa đơn trong thời gian này");
        }
        else{
        df.setValue(cost1, "Amount", "Tháng 1");
        df.setValue(cost2, "Amount", "Tháng 2");
        df.setValue(cost3, "Amount", "Tháng 3");
        df.setValue(cost4, "Amount", "Tháng 4");
        df.setValue(cost5, "Amount", "Tháng 5");
        df.setValue(cost6,"Amount", "Tháng 6");
        df.setValue(cost7, "Amount", "Tháng 7");
        df.setValue(cost8, "Amount", "Tháng 8");
        df.setValue(cost9, "Amount", "Tháng 9");
        df.setValue(cost10, "Amount", "Tháng 10");
        df.setValue(cost11, "Amount", "Tháng 11");
        df.setValue(cost12, "Amount", "Tháng 12");
        JFreeChart lineChart=ChartFactory.createLineChart("Thống Kê Doanh Thu KTX","Tháng","Tổng Tiền",df, PlotOrientation.VERTICAL,false,true,false);
    CategoryPlot lineCate=lineChart.getCategoryPlot();
    lineCate.setBackgroundPaint(Color.white);
    LineAndShapeRenderer line=(LineAndShapeRenderer)lineCate.getRenderer();
    Color lineChartColor=new Color(204,0,51);
    line.setSeriesPaint(0, lineChartColor);
    ChartPanel charPanel=new ChartPanel(lineChart);
    panel.removeAll();
    panel.add(charPanel,BorderLayout.CENTER);
    panel.validate();
        }
}
int month(Date d){
        SimpleDateFormat df=new SimpleDateFormat("dd/MM/yyyy");
        String date=df.format(d);
        String arr[]=date.split("/");
        int month=Integer.valueOf(arr[1]);
        return month;
    }
int year(Date d){
        SimpleDateFormat df=new SimpleDateFormat("dd/MM/yyyy");
        String date=df.format(d);
        String arr[]=date.split("/");
        int month=Integer.valueOf(arr[2]);
        return month;
    }
    public String chuanHoa(String s) {
        s = s.trim();
        s = s.replaceAll("\\s+", " ");

        String a[] = s.split(" ");
        String kq = "";
        for (String x : a) {
            kq = kq + x.substring(0,1).toUpperCase()+x.substring(1).toLowerCase();
            kq += " ";
        }
        kq = kq.trim();
        return kq;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jfree.chart.panel.AbstractOverlay abstractOverlay1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
